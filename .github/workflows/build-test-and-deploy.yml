# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and deploy to github pages

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["*"]
    # use the create-pull-request even so that the CI is triggered even for PRs made from a github action
    repository_dispatch:
        types: [create-pull-request]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest
        env:
            CI: false

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci
            - run: npm run build --if-present

            - name: Run tests
              run: npm test

            # This test just sees if the schema _can_ be updated, but it doesn't actually update it.
            # If this breaks, it means something in the oh-so-fragile pipeline has broken.
            - name: Test if schema can be updated
              run: |
                cd packages/jsx
                ./update-schema-from-pretext-master.sh

            - name: Prepare for Github Pages
              run: |
                  mkdir -p ./website
                  cp -r ./packages/pretext-playground/build/* ./website
                  cp -r ./packages/docs/out ./website/docs

            - name: Package website deployment
              uses: actions/upload-pages-artifact@v3
              with:
                  artifact-name: website
                  path: ./website

    deploy:
        if: ${{ github.event_name == 'push' }}
        environment:
            name: github-pages
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: website
              uses: actions/deploy-pages@v4
